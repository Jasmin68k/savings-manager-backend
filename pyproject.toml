[tool.black]
line-length = 100
exclude = '''
/(
  | __pycache__
  | .mypy_cache
  | alembic
  | docs
  | envs
)/
'''


[tool.isort]
profile = "black"


[tool.flake8]
max-line-length = 100
exclude = '''
/(
  | __pycache__
  | .mypy_cache
  | alembic
  | docs
  | envs
)/
'''


[tool.mypy]
warn_redundant_casts = true
no_site_packages = true
no_implicit_optional = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_calls = true
ignore_missing_imports = true
warn_no_return = true
warn_unreachable = true
strict_equality = true


[tool.pylint.MASTER]
# Use multiple processes to speed up Pylint. Specifying 0 will auto-detect the
# number of processors available to use.
jobs=0
max-line-length=100
load-plugins=[
    "pylint_per_file_ignores",
    "pylint_pytest",
]


[tool.pylint.'MESSAGES CONTROL']
# see: https://github.com/christopherpickering/pylint-per-file-ignores
per-file-ignores = [
    "test_db_manager.py:missing-function-docstring",
]


[tool.poetry]
name = "savings-manager"
version = "0.1.0"
description = ""
authors = ["'PythBuster' <'pythbuster@gmail.com'>"]
readme = "README.md"


[tool.poetry.dependencies]
python = "^3.11"
alembic = "^1.13.1"
sqlalchemy = "^2.0.25"
pydantic = "^2.6.1"
dictalchemy3 = "^1.0.0"
pydantic-settings = "^2.1.0"
aiosqlite = "^0.19.0"
asyncpg = "^0.29.0"
python-dotenv = "^1.0.1"
fastapi = "^0.109.2"
pytest-cov = "^4.1.0"


[tool.poetry.group.dev.dependencies]
mypy = "^1.8.0"
black = "^24.1.1"
isort = "^5.13.2"
flake8-pyproject = "^1.2.3"
pylint = "^3.0.3"
pytest = "^8.0.0"
pytest-dependency = "^0.6.0"
pytest-ordering = "^0.6"
sphinx = "^7.2.6"
pytest-asyncio = "^0.23.5"
pylint-per-file-ignores = "^1.3.2"
pylint-pytest = "^1.1.7"
vulture = "^2.11"
jupyter = "^1.0.0"


[tool.pytest.ini_options]
asyncio_mode = "auto"
addopts = "--maxfail=1 --cov=src --cov-report html"
testpaths = [
    "tests",
]

[tool.vulture]
ignore_decorators = ["@model_validator", "@pytest.fixture"]
paths = ["tests", "src", "docs/vulture_whitelist.py"]
sort_by_size = true


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
